<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第三弹</title>
      <link href="/2025/01/01/03/"/>
      <url>/2025/01/01/03/</url>
      
        <content type="html"><![CDATA[<h1 id="使用-CMakeLists-管理-cpp"><a href="#使用-CMakeLists-管理-cpp" class="headerlink" title="使用 CMakeLists 管理 cpp"></a>使用 CMakeLists 管理 cpp</h1><h3 id="在当前目录下创建一个-cpp-文件，如-hello-cpp，内容就是输出-hello-world"><a href="#在当前目录下创建一个-cpp-文件，如-hello-cpp，内容就是输出-hello-world" class="headerlink" title="在当前目录下创建一个 cpp 文件，如 hello.cpp，内容就是输出 hello world"></a>在当前目录下创建一个 cpp 文件，如 hello.cpp，内容就是输出 hello world</h3><h3 id="再创建一个-CMakeLists-txt-的文件，内容如下"><a href="#再创建一个-CMakeLists-txt-的文件，内容如下" class="headerlink" title="再创建一个 CMakeLists.txt 的文件，内容如下:"></a>再创建一个 CMakeLists.txt 的文件，内容如下:</h3><blockquote><h3 id="指定-cmake-的最小版本"><a href="#指定-cmake-的最小版本" class="headerlink" title="# 指定 cmake 的最小版本"></a># 指定 cmake 的最小版本</h3><h3 id="cmake-minimum-required-VERSION-3-8"><a href="#cmake-minimum-required-VERSION-3-8" class="headerlink" title="cmake_minimum_required(VERSION 3.8)"></a>cmake_minimum_required(VERSION 3.8)</h3><h3 id="项目名称"><a href="#项目名称" class="headerlink" title="# 项目名称"></a># 项目名称</h3><h3 id="project-hello"><a href="#project-hello" class="headerlink" title="project(hello)"></a>project(hello)</h3><h3 id="添加可执行文件，-可执行文件名，源文件名"><a href="#添加可执行文件，-可执行文件名，源文件名" class="headerlink" title="# 添加可执行文件，(可执行文件名，源文件名)"></a># 添加可执行文件，(可执行文件名，源文件名)</h3><h3 id="add-executable-learn-cmake-hello-cpp"><a href="#add-executable-learn-cmake-hello-cpp" class="headerlink" title="add_executable(learn_cmake hello.cpp)"></a>add_executable(learn_cmake hello.cpp)</h3></blockquote><h3 id="然后执行命令-当前路径下打开命令框-，将-cmake-转换为-makefile"><a href="#然后执行命令-当前路径下打开命令框-，将-cmake-转换为-makefile" class="headerlink" title="然后执行命令(当前路径下打开命令框)，将 cmake 转换为 makefile"></a>然后执行命令(当前路径下打开命令框)，将 cmake 转换为 makefile</h3><blockquote><h3 id="cmake-后面跟的是目录"><a href="#cmake-后面跟的是目录" class="headerlink" title="# cmake 后面跟的是目录"></a># cmake 后面跟的是目录</h3><h3 id="cmake"><a href="#cmake" class="headerlink" title="$ cmake ."></a>$ cmake .</h3></blockquote><h3 id="再执行命令，编译生成可执行文件"><a href="#再执行命令，编译生成可执行文件" class="headerlink" title="再执行命令，编译生成可执行文件"></a>再执行命令，编译生成可执行文件</h3><blockquote><h3 id="make"><a href="#make" class="headerlink" title="$ make"></a>$ make</h3></blockquote><h3 id="此时就生成了可执行文件-learn-cmake-了，可以直接运行"><a href="#此时就生成了可执行文件-learn-cmake-了，可以直接运行" class="headerlink" title="此时就生成了可执行文件 learn_cmake 了，可以直接运行"></a>此时就生成了可执行文件 learn_cmake 了，可以直接运行</h3><blockquote><h3 id="learn-cmake"><a href="#learn-cmake" class="headerlink" title="$ .&#x2F;learn_cmake"></a>$ .&#x2F;learn_cmake</h3></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第二弹</title>
      <link href="/2025/01/01/02/"/>
      <url>/2025/01/01/02/</url>
      
        <content type="html"><![CDATA[<h1 id="常用的-Linux-操作命令"><a href="#常用的-Linux-操作命令" class="headerlink" title="常用的 Linux 操作命令"></a>常用的 Linux 操作命令</h1><h3 id="当前终端所在目录"><a href="#当前终端所在目录" class="headerlink" title="当前终端所在目录"></a>当前终端所在目录</h3><blockquote><h3 id="pwd"><a href="#pwd" class="headerlink" title="$ pwd"></a>$ pwd</h3></blockquote><h3 id="查看文件内容"><a href="#查看文件内容" class="headerlink" title="查看文件内容"></a>查看文件内容</h3><blockquote><h3 id="cat-name-txt"><a href="#cat-name-txt" class="headerlink" title="$ cat name.txt"></a>$ cat name.txt</h3></blockquote><h3 id="卸载某个包"><a href="#卸载某个包" class="headerlink" title="卸载某个包"></a>卸载某个包</h3><blockquote><h3 id="sudo-apt-remove-pkg-name"><a href="#sudo-apt-remove-pkg-name" class="headerlink" title="$ sudo apt remove pkg_name"></a>$ sudo apt remove pkg_name</h3></blockquote><h3 id="安装-deb"><a href="#安装-deb" class="headerlink" title="安装 .deb"></a>安装 .deb</h3><blockquote><h3 id="sudo-dpkg-i-file-name-deb"><a href="#sudo-dpkg-i-file-name-deb" class="headerlink" title="$ sudo dpkg -i file_name.deb"></a>$ sudo dpkg -i file_name.deb</h3></blockquote><h3 id="解压-tar-gz-tgz"><a href="#解压-tar-gz-tgz" class="headerlink" title="解压 .tar.gz&#x2F;.tgz"></a>解压 .tar.gz&#x2F;.tgz</h3><blockquote><h3 id="tar-xzvf-file-tar-gz-C-path"><a href="#tar-xzvf-file-tar-gz-C-path" class="headerlink" title="$ tar -xzvf file.tar.gz -C &#x2F;path"></a>$ tar -xzvf file.tar.gz -C &#x2F;path</h3></blockquote><h3 id="解压-zip"><a href="#解压-zip" class="headerlink" title="解压 .zip"></a>解压 .zip</h3><blockquote><h3 id="unzip-file-zip-d-path"><a href="#unzip-file-zip-d-path" class="headerlink" title="$ unzip file.zip -d &#x2F;path"></a>$ unzip file.zip -d &#x2F;path</h3></blockquote><h3 id="解压-rar"><a href="#解压-rar" class="headerlink" title="解压 .rar"></a>解压 .rar</h3><blockquote><h3 id="unrar-x-file-rar"><a href="#unrar-x-file-rar" class="headerlink" title="$ unrar x file.rar"></a>$ unrar x file.rar</h3></blockquote><h3 id="查找某个文件"><a href="#查找某个文件" class="headerlink" title="查找某个文件"></a>查找某个文件</h3><blockquote><h3 id="whereis-file-name"><a href="#whereis-file-name" class="headerlink" title="$ whereis file_name"></a>$ whereis file_name</h3></blockquote><h3 id="使用-nano-编辑文本"><a href="#使用-nano-编辑文本" class="headerlink" title="使用 nano 编辑文本"></a>使用 nano 编辑文本</h3><blockquote><h3 id="nano-file-name"><a href="#nano-file-name" class="headerlink" title="$ nano file_name"></a>$ nano file_name</h3></blockquote><h3 id="查看执行过的命令"><a href="#查看执行过的命令" class="headerlink" title="查看执行过的命令"></a>查看执行过的命令</h3><blockquote><h3 id="history"><a href="#history" class="headerlink" title="$ history"></a>$ history</h3></blockquote><h3 id="终端中的复制粘贴快捷键"><a href="#终端中的复制粘贴快捷键" class="headerlink" title="终端中的复制粘贴快捷键"></a>终端中的复制粘贴快捷键</h3><blockquote><h3 id="ctrl-shift-C-ctrl-shift-V"><a href="#ctrl-shift-C-ctrl-shift-V" class="headerlink" title="ctrl + shift + C &#x2F; ctrl + shift + V"></a>ctrl + shift + C &#x2F; ctrl + shift + V</h3></blockquote><h3 id="终端中执行-py"><a href="#终端中执行-py" class="headerlink" title="终端中执行 .py"></a>终端中执行 .py</h3><blockquote><h3 id="python3-file-name-py"><a href="#python3-file-name-py" class="headerlink" title="$ python3 file_name.py"></a>$ python3 file_name.py</h3></blockquote><h3 id="给文件添加权限，文件或者目录的权限分为三类，权限也分为三类"><a href="#给文件添加权限，文件或者目录的权限分为三类，权限也分为三类" class="headerlink" title="给文件添加权限，文件或者目录的权限分为三类，权限也分为三类"></a>给文件添加权限，文件或者目录的权限分为三类，权限也分为三类</h3><blockquote><h4 id="1-用户-user-u-：文件拥有者"><a href="#1-用户-user-u-：文件拥有者" class="headerlink" title="1.用户(user,u)：文件拥有者"></a>1.用户(user,u)：文件拥有者</h4><h4 id="2-组-group-g-：与user在同一组的用户"><a href="#2-组-group-g-：与user在同一组的用户" class="headerlink" title="2.组(group,g)：与user在同一组的用户"></a>2.组(group,g)：与user在同一组的用户</h4><h4 id="3-其他人-others-o-：所有其他用户"><a href="#3-其他人-others-o-：所有其他用户" class="headerlink" title="3.其他人(others,o)：所有其他用户"></a>3.其他人(others,o)：所有其他用户</h4><h4 id="读，r，值为-4-；写，w，值为-2-；执行，x，值为-1"><a href="#读，r，值为-4-；写，w，值为-2-；执行，x，值为-1" class="headerlink" title="读，r，值为 4 ；写，w，值为 2 ；执行，x，值为 1"></a>读，r，值为 4 ；写，w，值为 2 ；执行，x，值为 1</h4></blockquote><h3 id="赋予所有用户执行权，添加权限就是-，移除权限就是"><a href="#赋予所有用户执行权，添加权限就是-，移除权限就是" class="headerlink" title="赋予所有用户执行权，添加权限就是 + ，移除权限就是 -"></a>赋予所有用户执行权，添加权限就是 + ，移除权限就是 -</h3><blockquote><h3 id="chmod-a-x-file"><a href="#chmod-a-x-file" class="headerlink" title="$ chmod a+x file"></a>$ chmod a+x file</h3></blockquote><h3 id="查看文件-目录权限"><a href="#查看文件-目录权限" class="headerlink" title="查看文件&#x2F;目录权限"></a>查看文件&#x2F;目录权限</h3><blockquote><h3 id="ls-l-file"><a href="#ls-l-file" class="headerlink" title="$ ls -l file"></a>$ ls -l file</h3></blockquote><p><img src="http://picbed.yanzu.tech/img/learn_ros2/pic_3.png" alt="pic"></p><h3 id="要在命令框中直接执行-py-文件，不使用-python3-file-py，要指定编译器，在-py-文件顶部添加"><a href="#要在命令框中直接执行-py-文件，不使用-python3-file-py，要指定编译器，在-py-文件顶部添加" class="headerlink" title="要在命令框中直接执行 .py 文件，不使用 python3 file.py，要指定编译器，在 .py 文件顶部添加"></a>要在命令框中直接执行 .py 文件，不使用 python3 file.py，要指定编译器，在 .py 文件顶部添加</h3><blockquote><h3 id="usr-bin-python3"><a href="#usr-bin-python3" class="headerlink" title="#!usr&#x2F;bin&#x2F;python3"></a>#!usr&#x2F;bin&#x2F;python3</h3><h3 id="然后就可以使用"><a href="#然后就可以使用" class="headerlink" title="然后就可以使用"></a>然后就可以使用</h3><h3 id="file-py"><a href="#file-py" class="headerlink" title="$ .&#x2F;file.py"></a>$ .&#x2F;file.py</h3></blockquote><h3 id="echo-指令的使用，echo-本身的功能就是打印其后的字符"><a href="#echo-指令的使用，echo-本身的功能就是打印其后的字符" class="headerlink" title="echo 指令的使用，echo 本身的功能就是打印其后的字符"></a>echo 指令的使用，echo 本身的功能就是打印其后的字符</h3><blockquote><h3 id="可以找到跟在其后的字符的环境变量，echo-就能打印该环境变量"><a href="#可以找到跟在其后的字符的环境变量，echo-就能打印该环境变量" class="headerlink" title="$ 可以找到跟在其后的字符的环境变量，echo 就能打印该环境变量"></a>$ 可以找到跟在其后的字符的环境变量，echo 就能打印该环境变量</h3><h3 id="echo-ROS-VERSION"><a href="#echo-ROS-VERSION" class="headerlink" title="$ echo $ROS_VERSION"></a>$ echo $ROS_VERSION</h3><h3 id="查看-ros-的发行版本"><a href="#查看-ros-的发行版本" class="headerlink" title="# 查看 ros 的发行版本"></a># 查看 ros 的发行版本</h3><h3 id="echo-ROS-DISTRO"><a href="#echo-ROS-DISTRO" class="headerlink" title="$ echo $ROS_DISTRO"></a>$ echo $ROS_DISTRO</h3></blockquote><h3 id="查看所有环境变量列表"><a href="#查看所有环境变量列表" class="headerlink" title="查看所有环境变量列表"></a>查看所有环境变量列表</h3><blockquote><h3 id="printenv"><a href="#printenv" class="headerlink" title="$ printenv"></a>$ printenv</h3></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一弹</title>
      <link href="/2024/12/04/01/"/>
      <url>/2024/12/04/01/</url>
      
        <content type="html"><![CDATA[<h1 id="ROS2-的安装"><a href="#ROS2-的安装" class="headerlink" title="ROS2 的安装"></a>ROS2 的安装</h1><h3 id="鱼香ROS安装命令"><a href="#鱼香ROS安装命令" class="headerlink" title="鱼香ROS安装命令"></a>鱼香ROS安装命令</h3><blockquote><h3 id="wget-http-fishros-com-install-O-fishros-bash-fishros"><a href="#wget-http-fishros-com-install-O-fishros-bash-fishros" class="headerlink" title="$ wget http://fishros.com/install -O fishros &amp;&amp; bash fishros"></a>$ wget <a href="http://fishros.com/install">http://fishros.com/install</a> -O fishros &amp;&amp; bash fishros</h3></blockquote><h3 id="安装成功后可使用以下命令查看"><a href="#安装成功后可使用以下命令查看" class="headerlink" title="安装成功后可使用以下命令查看"></a>安装成功后可使用以下命令查看</h3><blockquote><h3 id="ros2"><a href="#ros2" class="headerlink" title="$ ros2"></a>$ ros2</h3></blockquote><h3 id="测试安装是否成功，运行小海龟"><a href="#测试安装是否成功，运行小海龟" class="headerlink" title="测试安装是否成功，运行小海龟"></a>测试安装是否成功，运行小海龟</h3><h4 id="先运行一个小海龟节点"><a href="#先运行一个小海龟节点" class="headerlink" title="先运行一个小海龟节点"></a>先运行一个小海龟节点</h4><blockquote><h3 id="ros2-run-turtlesim-turtlesim-node"><a href="#ros2-run-turtlesim-turtlesim-node" class="headerlink" title="$ ros2 run turtlesim turtlesim_node"></a>$ ros2 run turtlesim turtlesim_node</h3></blockquote><h4 id="新建一个命令框运行另外一个节点，与前一个节点通信，从而通过键盘来控制小海龟移动"><a href="#新建一个命令框运行另外一个节点，与前一个节点通信，从而通过键盘来控制小海龟移动" class="headerlink" title="新建一个命令框运行另外一个节点，与前一个节点通信，从而通过键盘来控制小海龟移动"></a>新建一个命令框运行另外一个节点，与前一个节点通信，从而通过键盘来控制小海龟移动</h4><blockquote><h3 id="ros2-run-turtlesim-turtle-teleop-key"><a href="#ros2-run-turtlesim-turtle-teleop-key" class="headerlink" title="$ ros2 run turtlesim turtle_teleop_key"></a>$ ros2 run turtlesim turtle_teleop_key</h3></blockquote><p><img src="http://picbed.yanzu.tech/img/learn_ros2/pic_1.png" alt="pic"></p><h4 id="此时可以再新建一个命令框，执行"><a href="#此时可以再新建一个命令框，执行" class="headerlink" title="此时可以再新建一个命令框，执行"></a>此时可以再新建一个命令框，执行</h4><blockquote><h3 id="rqt"><a href="#rqt" class="headerlink" title="$ rqt"></a>$ rqt</h3></blockquote><h3 id="点击-plugins-introspection-node-graph，就可以看到当前两个节点之间的通信情况了"><a href="#点击-plugins-introspection-node-graph，就可以看到当前两个节点之间的通信情况了" class="headerlink" title="点击 plugins -&gt; introspection -&gt; node graph，就可以看到当前两个节点之间的通信情况了"></a>点击 plugins -&gt; introspection -&gt; node graph，就可以看到当前两个节点之间的通信情况了</h3><h3 id="teleop-turtle-通过-turtle1-cmd-vel-对-turtlesim-进行控制"><a href="#teleop-turtle-通过-turtle1-cmd-vel-对-turtlesim-进行控制" class="headerlink" title="teleop_turtle 通过 &#x2F;turtle1&#x2F;cmd_vel 对 turtlesim 进行控制"></a>teleop_turtle 通过 &#x2F;turtle1&#x2F;cmd_vel 对 turtlesim 进行控制</h3><p><img src="http://picbed.yanzu.tech/img/learn_ros2/pic_2.png" alt="pic"></p><h3 id="ros2-run-turtlesim-turtlesim-node-这条命令是什么意思，又是如何执行的？"><a href="#ros2-run-turtlesim-turtlesim-node-这条命令是什么意思，又是如何执行的？" class="headerlink" title="ros2 run turtlesim turtlesim_node 这条命令是什么意思，又是如何执行的？"></a>ros2 run turtlesim turtlesim_node 这条命令是什么意思，又是如何执行的？</h3><blockquote><h3 id="首先，-ros2-run-会找到一个环境变量-AMENT-PREFIX-PATH，可能有多个值，多值就循环遍历"><a href="#首先，-ros2-run-会找到一个环境变量-AMENT-PREFIX-PATH，可能有多个值，多值就循环遍历" class="headerlink" title="首先， ros2 run 会找到一个环境变量 AMENT_PREFIX_PATH，可能有多个值，多值就循环遍历"></a>首先， ros2 run 会找到一个环境变量 AMENT_PREFIX_PATH，可能有多个值，多值就循环遍历</h3><h3 id="接着，在这个环境变量对应的路径下去找-lib-文件，找到后再在其目录下找-turtlesim-包"><a href="#接着，在这个环境变量对应的路径下去找-lib-文件，找到后再在其目录下找-turtlesim-包" class="headerlink" title="接着，在这个环境变量对应的路径下去找 lib 文件，找到后再在其目录下找 turtlesim 包"></a>接着，在这个环境变量对应的路径下去找 lib 文件，找到后再在其目录下找 turtlesim 包</h3><h3 id="找到对应的包之后，在其目录下找到可执行文件-turtlesim-node，然后执行"><a href="#找到对应的包之后，在其目录下找到可执行文件-turtlesim-node，然后执行" class="headerlink" title="找到对应的包之后，在其目录下找到可执行文件 turtlesim_node，然后执行"></a>找到对应的包之后，在其目录下找到可执行文件 turtlesim_node，然后执行</h3><h3 id="那么可以直接使用以下命令代替执行对应的可执行文件"><a href="#那么可以直接使用以下命令代替执行对应的可执行文件" class="headerlink" title="那么可以直接使用以下命令代替执行对应的可执行文件"></a>那么可以直接使用以下命令代替执行对应的可执行文件</h3><h3 id="但只能是-AMENT-PREFIX-PATH-opt-ros-humble-的情况下才能这么执行"><a href="#但只能是-AMENT-PREFIX-PATH-opt-ros-humble-的情况下才能这么执行" class="headerlink" title="(但只能是 AMENT_PREFIX_PATH&#x3D;&#x2F;opt&#x2F;ros&#x2F;humble 的情况下才能这么执行)"></a>(但只能是 AMENT_PREFIX_PATH&#x3D;&#x2F;opt&#x2F;ros&#x2F;humble 的情况下才能这么执行)</h3><h3 id="AMENT-PREFIX-PATH-lib-turtlesim-turtlesim-node"><a href="#AMENT-PREFIX-PATH-lib-turtlesim-turtlesim-node" class="headerlink" title="$ $AMENT_PREFIX_PATH&#x2F;lib&#x2F;turtlesim&#x2F;turtlesim_node"></a>$ $AMENT_PREFIX_PATH&#x2F;lib&#x2F;turtlesim&#x2F;turtlesim_node</h3></blockquote><h3 id="修改环境变量，-export-环境变量名-path"><a href="#修改环境变量，-export-环境变量名-path" class="headerlink" title="修改环境变量， export 环境变量名&#x3D;path"></a>修改环境变量， export 环境变量名&#x3D;path</h3><blockquote><h3 id="export-AMENT-PREFIX-PATH-opt-ros"><a href="#export-AMENT-PREFIX-PATH-opt-ros" class="headerlink" title="export AMENT_PREFIX_PATH&#x3D;&#x2F;opt&#x2F;ros"></a>export AMENT_PREFIX_PATH&#x3D;&#x2F;opt&#x2F;ros</h3></blockquote><h3 id="在-linux-中，以-开头的文件或文件夹是隐藏文件"><a href="#在-linux-中，以-开头的文件或文件夹是隐藏文件" class="headerlink" title="在 linux 中，以 . 开头的文件或文件夹是隐藏文件"></a>在 linux 中，以 . 开头的文件或文件夹是隐藏文件</h3><blockquote><h3 id="查看当前目录下的所有文件，包括隐藏文件"><a href="#查看当前目录下的所有文件，包括隐藏文件" class="headerlink" title="查看当前目录下的所有文件，包括隐藏文件"></a>查看当前目录下的所有文件，包括隐藏文件</h3><h3 id="ls-a"><a href="#ls-a" class="headerlink" title="$ ls -a"></a>$ ls -a</h3></blockquote><h3 id="只要一打开终端，就会默认启动一个脚本-bashrc，他会设置一系列的环境变量"><a href="#只要一打开终端，就会默认启动一个脚本-bashrc，他会设置一系列的环境变量" class="headerlink" title="只要一打开终端，就会默认启动一个脚本 .bashrc，他会设置一系列的环境变量"></a>只要一打开终端，就会默认启动一个脚本 .bashrc，他会设置一系列的环境变量</h3>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
